% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile_qmd_course.R
\name{compile_qmd_course}
\alias{compile_qmd_course}
\title{Create a single html from multiple qmd}
\usage{
compile_qmd_course(
  vec_qmd_path,
  output_dir,
  output_html,
  template = system.file("template.qmd", package = "squash"),
  output_format = "thinkridentity-revealjs",
  title = "Formation R",
  date = "01/01/01-01/01/01",
  footer = "**<i class='las la-book'></i> Formation R**",
  trainer = "ThinkR",
  mail = "thinkr.fr",
  phone = "+33 0 00 00 00 00",
  ext_dir = system.file("_extensions", package = "squash"),
  quiet = TRUE,
  fix_img_path = FALSE
)
}
\arguments{
\item{vec_qmd_path}{character. Vector of the path to qmd files}

\item{output_dir}{character. Output path to store html files and companion folders}

\item{output_html}{character. File name of the complete html output saved}

\item{template}{character. Path to the template qmd to use. Content will be included at the positions inside double-brackets}

\item{output_format}{character. Output format of the qmd, default to "revealjs". Can be adapted for specific themes.}

\item{title}{character. Title of the presentation}

\item{date}{character. Start and end dates of the training}

\item{footer}{character. Footer appearing in all slides}

\item{trainer}{character. Name of the trainer}

\item{mail}{character. Mail of the trainer}

\item{phone}{character. Phone number of the trainer}

\item{ext_dir}{character. Path to the _extensions directory to use when compiling qmd}

\item{quiet}{logical. Output info in user console}

\item{fix_img_path}{logical. If image path are present as raw html inside files,
use this option to correctly edit their path.}
}
\value{
character. The path to the resulting html file
}
\description{
Independently compile several qmd and create a common html
}
\examples{
library(future)

# set parallel rendering
plan(multisession, workers = 2)

# list example qmds
courses_path <- system.file(
  "courses",
  "M01",
  package = "squash"
)

# copy course tree in tmpdir, add quarto porject file
tmp_course_path <- tempfile(pattern = "course")
dir.create(tmp_course_path)
file.create(file.path(tmp_course_path, "_quarto.yaml"))

file.copy(
  from = courses_path,
  to = tmp_course_path,
  recursive = TRUE
)

qmds <- list.files(
  path = tmp_course_path,
  full.names = TRUE,
  recursive = TRUE,
  pattern = "qmd$"
)

# generate html in temp folder
temp_dir <- tempfile(pattern = "compile")

html_output <- compile_qmd_course(
  vec_qmd_path = qmds,
  output_dir = temp_dir,
  output_html = "complete_course.html"
)

# reset default rendering
plan("default")

# clean up
unlink(temp_dir, recursive = TRUE)
unlink(tmp_course_path, recursive = TRUE)
}
