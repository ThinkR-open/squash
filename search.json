[{"path":"https://thinkr-open.github.io/squash/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ThinkR Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage.html","id":"using-personnalised-template","dir":"Articles","previous_headings":"","what":"Using personnalised template","title":"Advanced usage","text":"default, squash include qmd chapters minimal template extra slide title one. can provide personalized template, include custom placeholder necessary. requirement template keep {{ include_html_content }} placeholder, landing spot including chapter slides. Let’s use following template : template available via system.file(\"template.qmd\", package = \"squash\") template, add three new placeholders last slide mention trainer’s contact details. can now render template customized info new slots following command : can add many new placeholder wish, long provide value template_text input list. can also add fixed content directly template rendered without need extra parameters.","code":"{{ include_html_content }}  ---   ## {{ trainer }}  **{{ phone }}**  **{{ mail }}** library(squash)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   template = system.file(\"template.qmd\", package = \"squash\"),   template_text = list(     \"trainer\" = \"Rudolph\",     \"phone\" = \"36 15 36 15\",     \"mail\" = \"alloperenoel.com\"   ) )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage.html","id":"using-quarto-extensions-theme-and-plugin","dir":"Articles","previous_headings":"","what":"Using quarto extensions (theme and plugin)","title":"Advanced usage","text":"Let’s now say default quarto theme somewhat style, include preferred quarto theme ? , first need install extension machine like single qmd file rendering. Great, now can use theme squash providing target theme output_format _extensions folder path ext_dir. Cool right ? let’s go add plugin _extensions folders ! can now add plugin rendering metadata integrate presentation.","code":"quarto add ArthurData/quarto-revealjs-lilleuniv html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   output_format = \"revealjs-lille-univ-dark-revealjs\",   ext_dir = \"path/to/_extensions\" ) quarto add ArthurData/quarto-confetti html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   metadata_template = list(     `revealjs-plugins` = c(\"confetti\")   ),   ext_dir = \"path/to/_extensions\" )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage.html","id":"a-note-on-extensions","dir":"Articles","previous_headings":"Using quarto extensions (theme and plugin)","what":"A note on extensions","title":"Advanced usage","text":"order use themes plugins, can provide single _extensions folder via ext_dir parameter, make sure necessary folders installed . can edit metadata template level (metadata_template input) /qmd level (metadata_qmd input). usually best plugins themes applied template level (source main html output file). rendering qmd file, squash make sure qmd can access provided _extensions folder. Two scenarios can triggered : qmd part quarto project : _extensions folder copied quarto project root cleaned rendering qmd part quarto project : _extensions folder copied qmd folder cleaned rendering cases, extensions already present target location, note raised console squash use existing extensions without overriting.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage.html","id":"using-parallel-workers","dir":"Articles","previous_headings":"","what":"Using parallel workers","title":"Advanced usage","text":"individual rendering qmd files managed future furrr packages, meaning can parallelize generation several chapters . , need setup future plan() selected behavior (e.g. sequential multisession) running compilation.","code":"library(future)  # set parallel rendering with future plan(multisession, workers = 2)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\" )  # reset default future plan plan(\"default\")"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage.html","id":"a-note-on-future","dir":"Articles","previous_headings":"Using parallel workers","what":"A note on future","title":"Advanced usage","text":"Parallel rendering currently natively supported quarto. result, please use parallel rendering risk, likely become unstable increasing number qmd chapter files. caused temporary execution directories may erased sub-process still looked another subprocess.","code":"# clean up unlink(temp_dir, recursive = TRUE) unlink(tmp_course_path, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/articles/get-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started","text":"squash made ? package developed enable generation single html presentation file multiple independent quarto files. Given list qmd files, squash individually render specified metadata combine content single template file. Relative references image external data single qmd file functional embedded final html presentation.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/get-started.html","id":"how-do-i-use-squash","dir":"Articles","previous_headings":"","what":"How do I use {squash} ?","title":"Get started","text":"basic example combining qmd files single html presentation. Let’s say two folders qmd files inside, refering logo images. can render single html presentation qmd executing following command : Tada, now new folder, complete html presentation alongside necessary external image files, stored individual sub-folder prevent overriding.","code":"fs::dir_tree(tmp_course_path) #> /tmp/Rtmpxc9p6B/course1a5058ab6045 #> └── M01 #>     ├── M01S01 #>     │   ├── C01-qmd1_for_test.qmd #>     │   ├── C02-qmd2_for_test.qmd #>     │   └── img #>     │       ├── logo_1.png #>     │       └── logo_2.png #>     └── M01S02 #>         ├── C01-qmd3_for_test.qmd #>         └── img #>             └── logo_1.png  qmds <- list.files(   tmp_course_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"qmd$\" )  qmds #> [1] \"/tmp/Rtmpxc9p6B/course1a5058ab6045/M01/M01S01/C01-qmd1_for_test.qmd\" #> [2] \"/tmp/Rtmpxc9p6B/course1a5058ab6045/M01/M01S01/C02-qmd2_for_test.qmd\" #> [3] \"/tmp/Rtmpxc9p6B/course1a5058ab6045/M01/M01S02/C01-qmd3_for_test.qmd\" library(squash)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = file.path(tmp_course_path, \"complete\"),   output_html = \"complete_course.html\",   quiet = TRUE ) fs::dir_tree(tmp_course_path, recurse = 2) #> /tmp/Rtmpxc9p6B/course1a5058ab6045 #> ├── M01 #> │   ├── M01S01 #> │   │   ├── C01-qmd1_for_test.qmd #> │   │   ├── C02-qmd2_for_test.qmd #> │   │   └── img #> │   └── M01S02 #> │       ├── C01-qmd3_for_test.qmd #> │       └── img #> └── complete #>     ├── _extensions #>     ├── complete_course.html #>     ├── complete_course_files #>     │   └── libs #>     └── complete_course_img #>         ├── M01S01_img #>         └── M01S02_img"},{"path":"https://thinkr-open.github.io/squash/articles/get-started.html","id":"remarks","dir":"Articles","previous_headings":"","what":"Remarks","title":"Get started","text":"Files included order provided compile_qmd_course. Metadata parameters set compile_qmd_course supersede parameters detected inside qmd header /quarto project metadata files. {squash} can work inside outside quarto project, qmd files combine together can also come different quarto projects. case failure render files, squash erase temporarily created files exiting.","code":""},{"path":"https://thinkr-open.github.io/squash/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Antoine Languillaume. Author, maintainer. Colin Fay. Author. Swann Floc'hlay. Author.","code":""},{"path":"https://thinkr-open.github.io/squash/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Languillaume , Fay C, Floc'hlay S (2024). squash: Several Quarto Single HTML. R package version 0.4.5, https://github.com/ThinkR-open/squash, https://thinkr-open.github.io/squash/.","code":"@Manual{,   title = {squash: Several Quarto As Single HTML},   author = {Antoine Languillaume and Colin Fay and Swann Floc'hlay},   year = {2024},   note = {R package version 0.4.5, https://github.com/ThinkR-open/squash},   url = {https://thinkr-open.github.io/squash/}, }"},{"path":"https://thinkr-open.github.io/squash/index.html","id":"squash-several-quarto-to-single-html-","dir":"","previous_headings":"","what":"Several Quarto As Single HTML","title":"Several Quarto As Single HTML","text":"goal {squash} compile n .qmd presentations one single html file. main purpose create custom slide decks several chapter .qmd files. resulting html file can themed via quarto extensions.","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/squash/index.html","id":"external-dependencies","dir":"","previous_headings":"","what":"External dependencies","title":"Several Quarto As Single HTML","text":"package relies quarto > 1.3. Link quarto: download page","code":""},{"path":"https://thinkr-open.github.io/squash/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it","title":"Several Quarto As Single HTML","text":"Given vector containing path several .qmd chapters. directory want course generated. can use function compile_qmd_course() compile course. wrap function call inside progressr::with_progress() see progress bar. can also set console progressr::handlers(global = TRUE) Check result Clean temporary example directory.","code":"library(squash) # list example qmds from /inst courses_path <- system.file(   \"courses\",   \"M01\",   package = \"squash\" )  # copy example qmds in a tempdir tmp_course_path <- tempfile(pattern = \"course\") dir.create(tmp_course_path)  file.copy(   from = courses_path,   to = tmp_course_path,   recursive = TRUE )  qmds <- list.files(   path = tmp_course_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"qmd$\" )  qmds # generate html in temp folder temp_dir <- tempfile(pattern = \"compile\") html_output <- progressr::with_progress(   compile_qmd_course(     vec_qmd_path = qmds,     output_dir = temp_dir,     output_html = \"complete_course.html\"   ) ) browseURL(html_output) unlink(temp_dir, recursive = TRUE) unlink(tmp_course_path, recursive = TRUE)"},{"path":[]},{"path":"https://thinkr-open.github.io/squash/index.html","id":"check","dir":"","previous_headings":"Devs","what":"Check","title":"Several Quarto As Single HTML","text":"tests manually verify appearance slides. trigger , please run devtools::test() interactively.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean folder after quarto rendering — clean_rendering_files","title":"Clean folder after quarto rendering — clean_rendering_files","text":"Remove files folders created rendering qmd html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean folder after quarto rendering — clean_rendering_files","text":"","code":"clean_rendering_files(dir, present_before, extra_dir = NULL)"},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean folder after quarto rendering — clean_rendering_files","text":"dir character. directory look rendering output recursively. present_before character. Path files directories present rendering. extra_dir character. Path additional directories remove.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean folder after quarto rendering — clean_rendering_files","text":"None. Side effect: remove files present rendering","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean folder after quarto rendering — clean_rendering_files","text":"","code":"# create a temp dir with qmd temp_dir <- tempfile(pattern = \"clean\")  dir.create(   path = file.path(temp_dir, \"img\"),   recursive = TRUE )  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"C01-qmd1_for_test.qmd\", package = \"squash\"),   to = temp_dir ) #> [1] TRUE  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"img\", \"logo_1.png\", package = \"squash\"),   to = file.path(temp_dir, \"img\") ) #> [1] TRUE  # list files before rendering file_and_dirs_before <- list.files(   temp_dir,   recursive = TRUE,   full.names = TRUE,   include.dirs = TRUE )  # render qmd quarto::quarto_render(   input = file.path(temp_dir, \"C01-qmd1_for_test.qmd\"),   quiet = TRUE )  # remove created files and dirs clean_rendering_files(   dir = temp_dir,   present_before = file_and_dirs_before )  # clean temp dir unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single html from multiple qmd — compile_qmd_course","title":"Create a single html from multiple qmd — compile_qmd_course","text":"Independently compile several qmd create common html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single html from multiple qmd — compile_qmd_course","text":"","code":"compile_qmd_course(   vec_qmd_path,   output_dir,   output_html,   template = system.file(\"template_minimal.qmd\", package = \"squash\"),   output_format = \"revealjs\",   title = \"Title\",   metadata_template = NULL,   metadata_qmd = NULL,   template_text = NULL,   ext_dir = NULL,   quiet = FALSE,   debug = FALSE,   fix_img_path = TRUE )"},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single html from multiple qmd — compile_qmd_course","text":"vec_qmd_path character. Vector path qmd files output_dir character. Output path store html files companion folders output_html character. File name complete html output saved template character. Path template qmd use. Content included positions inside double-brackets output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. title character. Title presentation metadata_template list. List metadata used rendering template. path yml file provided, metadata read file. metadata_qmd list. List metadata used rendering individual qmd files. path yml file provided, metadata read file. template_text list. List named elements include template. ext_dir character. Path _extensions directory use compiling qmd quiet logical. Output info user console debug logical. Output rendering output user console. fix_img_path logical. image path present raw html inside files, use option correctly edit path.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a single html from multiple qmd — compile_qmd_course","text":"character. path resulting html file","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a single html from multiple qmd — compile_qmd_course","text":"","code":"library(future)  # set parallel rendering plan(multisession, workers = 2)  # list example qmds courses_path <- system.file(   \"courses\",   \"M01\",   package = \"squash\" )  # copy course tree in tmpdir, add quarto porject file tmp_course_path <- tempfile(pattern = \"course\") dir.create(tmp_course_path) file.create(file.path(tmp_course_path, \"_quarto.yaml\")) #> [1] TRUE  file.copy(   from = courses_path,   to = tmp_course_path,   recursive = TRUE ) #> [1] TRUE  qmds <- list.files(   path = tmp_course_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"qmd$\" )  # generate html in temp folder temp_dir <- tempfile(pattern = \"compile\")  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\" ) #> ✔ All qmd rendered.  # reset default rendering plan(\"default\")  # clean up unlink(temp_dir, recursive = TRUE) unlink(tmp_course_path, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"Copy img root img directory edit path html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"","code":"copy_img_and_edit_path(html_path, img_root_dir)"},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"html_path character. Path html file. img_root_dir character. Path img root dir","code":""},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"None. Side effet : edit img path html.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a themed html from a qmd template — create_template_html","title":"Create a themed html from a qmd template — create_template_html","text":"Create template html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a themed html from a qmd template — create_template_html","text":"","code":"create_template_html(   path_to_qmd,   output_file,   output_dir,   output_format = \"revealjs\",   title = \"Title\",   metadata = NULL,   temp_dir = tempfile(pattern = \"template\"),   ext_dir = system.file(\"_extensions\", package = \"squash\") )"},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a themed html from a qmd template — create_template_html","text":"path_to_qmd character. Path qmd template rendered output_file character. Name output html template output_dir character. Output path store html files companion folders output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. title character. Title presentation metadata list. List metadata used rendering template temp_dir character. Path temp_dir template rendered ext_dir character. Path _extensions directory use compiling qmd","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a themed html from a qmd template — create_template_html","text":"character. Path html template","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a themed html from a qmd template — create_template_html","text":"","code":"# create temp dir temp_dir <- tempfile(pattern = \"template\")  # create html template path_to_html_template <- create_template_html(   path_to_qmd = system.file(\"template.qmd\", package = \"squash\"),   output_dir = temp_dir,   output_file = \"complete_course.html\" )  # clean up unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract html slide content — extract_html_slides","title":"Extract html slide content — extract_html_slides","text":"Extract slide content multiple html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract html slide content — extract_html_slides","text":"","code":"extract_html_slides(vec_html_path, use_metadata = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract html slide content — extract_html_slides","text":"vec_html_path character. vector path individual html files use_metadata logical. Use keywords metadata building slide's url","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract html slide content — extract_html_slides","text":"HTML. HTML slide content html files combined together.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract html slide content — extract_html_slides","text":"","code":"# list html files courses_path <- system.file(   \"courses\",   package = \"squash\" )  htmls <- list.files(   path = courses_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"html$\" )  html_slide_content <- extract_html_slides(vec_html_path = htmls)"},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a qmd course to html — render_single_qmd","title":"Render a qmd course to html — render_single_qmd","text":"Render single qmd file html image folder.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a qmd course to html — render_single_qmd","text":"","code":"render_single_qmd(   qmd,   img_root_dir = \"img\",   output_format = \"revealjs\",   metadata = NULL,   quiet = TRUE )"},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a qmd course to html — render_single_qmd","text":"qmd character. Path qmd file render img_root_dir character. Path main image folder extract media output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. metadata list. List metadata used rendering single qmd file quiet logical. Output info user console","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a qmd course to html — render_single_qmd","text":"logical. TRUE rendering succeeded, FALSE otherwise. Side effect : render qmd html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a qmd course to html — render_single_qmd","text":"","code":"# create a temp dir with qmd temp_dir <- tempfile(pattern = \"render\")  dir.create(   path = file.path(temp_dir, \"img\"),   recursive = TRUE )  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"C01-qmd1_for_test.qmd\", package = \"squash\"),   to = temp_dir ) #> [1] TRUE  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"img\", \"logo_1.png\", package = \"squash\"),   to = file.path(temp_dir, \"img\") ) #> [1] TRUE  # render qmd is_rendered <- render_single_qmd(   qmd = file.path(temp_dir, \"C01-qmd1_for_test.qmd\"),   img_root_dir = file.path(temp_dir, \"image_folder\") )  # clean temp dir unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-045","dir":"Changelog","previous_headings":"","what":"squash 0.4.5","title":"squash 0.4.5","text":"Add debug parameter split simple verbose large one includong rendering details Add vignette simple usage","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-044","dir":"Changelog","previous_headings":"","what":"squash 0.4.4","title":"squash 0.4.4","text":"Refacto reduce single function size","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-043","dir":"Changelog","previous_headings":"","what":"squash 0.4.3","title":"squash 0.4.3","text":"use {fs} compute extensions relative path","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-042","dir":"Changelog","previous_headings":"","what":"squash 0.4.2","title":"squash 0.4.2","text":"Use external extension directory. Enable metadata input yaml Update doc cimplify user example ReadMe.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-041","dir":"Changelog","previous_headings":"","what":"squash 0.4.1","title":"squash 0.4.1","text":"Set rendering parameters function parameters instead yaml file.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-040","dir":"Changelog","previous_headings":"","what":"squash 0.4.0","title":"squash 0.4.0","text":"New feature : set fix_img_path TRUE enable img embedding html code.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-038","dir":"Changelog","previous_headings":"","what":"squash 0.3.8","title":"squash 0.3.8","text":"Update quakr increase text size slides","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-037","dir":"Changelog","previous_headings":"","what":"squash 0.3.7","title":"squash 0.3.7","text":"New feature: add footer html","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-036","dir":"Changelog","previous_headings":"","what":"squash 0.3.6","title":"squash 0.3.6","text":"Add admin file install {squash} dev containers","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-035","dir":"Changelog","previous_headings":"","what":"squash 0.3.5","title":"squash 0.3.5","text":"Improve test slides description text ease visual check Remove fusen structure","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-034","dir":"Changelog","previous_headings":"","what":"squash 0.3.4","title":"squash 0.3.4","text":"Use keywords metadata slide url id present check duplicates","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-033","dir":"Changelog","previous_headings":"","what":"squash 0.3.3","title":"squash 0.3.3","text":"Create output directory recursively exist","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-032","dir":"Changelog","previous_headings":"","what":"squash 0.3.2","title":"squash 0.3.2","text":"try fetch img dir media extracted qmd","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-031","dir":"Changelog","previous_headings":"","what":"squash 0.3.1","title":"squash 0.3.1","text":"Look quarto project using directory path","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-030","dir":"Changelog","previous_headings":"","what":"squash 0.3.0","title":"squash 0.3.0","text":"file rendering executed inside package file architecture Rendering progress tracked {progressr} Quarto compil profile quakr theme added quarto project pre-existing","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-021","dir":"Changelog","previous_headings":"","what":"squash 0.2.1","title":"squash 0.2.1","text":"Example courses used {formation} converted qmd included tests","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-020","dir":"Changelog","previous_headings":"","what":"squash 0.2.0","title":"squash 0.2.0","text":"Rename package","code":""}]
