[{"path":[]},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported one project maintainers.. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://thinkr-open.github.io/squash/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://thinkr-open.github.io/squash/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ThinkR Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-future.html","id":"a-note-on-future","dir":"Articles","previous_headings":"","what":"A note on future","title":"Using parallel workers","text":"Future plan modified squash, may want restor default plan rendering future::plan(\"default\") command. Parallel rendering currently natively supported quarto. result, please use parallel rendering risk, likely become unstable increasing number quarto chapter files. Unstability likely caused temporary execution directories may erased sub-process still looked another subprocess.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-template.html","id":"adding-fixed-elements-in-template","dir":"Articles","previous_headings":"","what":"Adding fixed elements in template","title":"Using personnalised template","text":"default, squash include quarto chapters minimal template extra slide title one empty last slide. can provide personalized template, additional content. requirement template keep {{ include_html_content }} placeholder, landing spot including chapter slides. Let’s change using default template (left) personalized template (right). default template personalized template , provide path template template parameter. Now, compilations new template end custom last slide! default last slide  personalized last slide","code":"{{ include_html_content }}  --- {{ include_html_content }}  ---  ## University of RandomName  +33 36 15 36 15  contact@randomu.com library(squash)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   template = \"path/to/template.qmd\" )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-template.html","id":"adding-variable-elements-in-template","dir":"Articles","previous_headings":"","what":"Adding variable elements in template","title":"Using personnalised template","text":"Let’s spice , want change contact details presentations. case, need pile custom templates, can add custom placeholders {{ element }} syntax. can fill value template_text parameter. Fell free add many new placeholders wish, long provide value template_text input. , also need keep {{ include_html_content }} placeholder somewhere inside template. Let’s use following template compile command line. personalized template command line three placeholders last slide: slide chapter name refer trainer two lines styled bold refer phone mail fill template_text list values, obtain following last slide: personalized last slide  Cool thing , can now re-use template adapt last slide content simply adjusting command line parameters.","code":"{{ include_html_content }}  ---  ## {{ trainer }}  **{{ phone }}**  **{{ mail }}** library(squash)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   template = \"path/to/template.qmd\",   template_text = list(     \"trainer\" = \"Rudolph\",     \"phone\" = \"36 15 36 15\",     \"mail\" = \"alloperenoel.com\"   ) )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-theme.html","id":"using-quarto-themes","dir":"Articles","previous_headings":"","what":"Using quarto themes","title":"Using quarto extensions","text":"Let’s say default quarto theme somewhat style, include preferred quarto theme ? , first need install target extension machine terminal, like single quarto revealjs file rendering. Great, now can use theme squash providing target theme output_format path _extensions folder ext_dir. slide deck now bear custom theme ! default theme slides  custom theme slides","code":"quarto add ArthurData/quarto-revealjs-lilleuniv html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   output_format = \"lille-univ-dark-revealjs\",   ext_dir = \"path/to/_extensions/\" )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-theme.html","id":"using-quarto-plugins","dir":"Articles","previous_headings":"","what":"Using quarto plugins","title":"Using quarto extensions","text":"Cool right? let’s go add couple plugins _extensions folder! can now list plugins metadata_template parameters integrate presentation. metadata_template input list converted yaml-like parameters provided rendering machinery, directly written header quarto file. Now, can throw confetti pressing c get pointer q 🎉.","code":"quarto add ArthurData/quarto-confetti quarto add quarto-ext/pointer html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\",   metadata_template = list(     `revealjs-plugins` = list(\"confetti\", \"pointer\")   ),   ext_dir = \"path/to/_extensions/\" )"},{"path":"https://thinkr-open.github.io/squash/articles/advanced-usage-theme.html","id":"a-note-on-extensions","dir":"Articles","previous_headings":"","what":"A note on extensions","title":"Using quarto extensions","text":"Metadata parameters set compile_qmd_course supersede parameters detected inside quarto header /quarto project metadata files. order use themes plugins, can provide single _extensions folder via ext_dir parameter, make sure necessary plugins themes installed . can edit metadata template level (metadata_template input) /individual chapter level (metadata_qmd input). usually best plugins themes applied template level (wrapper main html output file). Chapter-level metadata may usefull remove overlapping content (e.g. logo, footer). rendering quarto file extensions, squash provide access tho target _extensions folder. Several cases can triggered : file part quarto project: _extensions folder copied quarto project root cleaned rendering file part quarto project: _extensions folder copied file folder cleaned rendering cases, extensions already present target location, note raised console squash use existing extensions without overwriting .","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/squash/articles/dev-contribute.html","id":"contributing-to-squash","dir":"Articles","previous_headings":"","what":"Contributing to {squash}","title":"Contributing","text":"Development {squash} happens GitHub. can contribute package several ways: Reporting issues: find bug, please file minimal reproducible example GitHub clear description issue. Contributing code: want contribute code, please open pull request GitHub. Documentation: find typo error documentation, please open pull request GitHub. Ideas: idea new feature, please open issue GitHub discuss . contribution welcome!","code":""},{"path":"https://thinkr-open.github.io/squash/articles/dev-contribute.html","id":"note-for-the-contributors","dir":"Articles","previous_headings":"","what":"Note for the contributors","title":"Contributing","text":"want contribute package, please note package structured follows: main functions R/ folder. tests tests/ folder. documentation man/ folder. vignettes vignettes/ folder. squash template files inst/ folder.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/dev-contribute.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"Contributing","text":"package follows grkstyle style guide. Please make sure follow style contributing package.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/dev-contribute.html","id":"actual-state-of-the-package","dir":"Articles","previous_headings":"","what":"Actual state of the package","title":"Contributing","text":"package active development. actual state check main : Please make sure contribution break package. can run checks locally running following code: can run following code trigger interactive tests ask user validation output:","code":"devtools::check() devtools::test()"},{"path":"https://thinkr-open.github.io/squash/articles/dev-contribute.html","id":"code-of-conduct","dir":"Articles","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://thinkr-open.github.io/squash/articles/simple-example-usage.html","id":"how-do-i-use-squash","dir":"Articles","previous_headings":"","what":"How do I use {squash}?","title":"Simple example usage","text":"basic example combining qmd files single html presentation. Let’s say two folders three quarto revealjs presentation files, alongside images.  Example files stored system.file(\"courses\", \"M01\", package = \"squash\") can render combined html presentation quarto files executing following command: Tada, now new folder, complete html presentation!  Inside output directory can find following files: html file: complete revealjs presentation, content input quarto files image folder: store images (graph output, png, jpg, etc) organised sub-folders mimicking original file tree companion folder: like classic quarto rendering, store necessary libraries read revealjs html output","code":"library(squash)  qmds <- c(\"path/to/A.qmd\", \"path/to/B.qmd\", \"path/to/C.qmd\")  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = file.path(tmp_course_path, \"complete\"),   output_html = \"complete_course.html\" )"},{"path":"https://thinkr-open.github.io/squash/articles/simple-example-usage.html","id":"a-note-on-compilation","dir":"Articles","previous_headings":"","what":"A note on compilation","title":"Simple example usage","text":"File content included order provided compile_qmd_course. squash can work quarto files inside outside quarto project, can even mix compilation. case failure render files, squash erase temporarily created files exiting. see progress bar compilation running, can wrap function call inside progressr::with_progress(). can also set console progressr::handlers(global = TRUE). Image files stored sub-folders prevent overriding files identical names across different original folders. instance, two presentations use logo.png link two different images, correctly handled compiled html.","code":""},{"path":"https://thinkr-open.github.io/squash/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Antoine Languillaume. Author, maintainer. Colin Fay. Author. Swann Floc'hlay. Author.","code":""},{"path":"https://thinkr-open.github.io/squash/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Languillaume , Fay C, Floc'hlay S (2024). squash: Several Quarto Single HTML. R package version 1.0.0, https://github.com/ThinkR-open/squash, https://thinkr-open.github.io/squash/.","code":"@Manual{,   title = {squash: Several Quarto As Single HTML},   author = {Antoine Languillaume and Colin Fay and Swann Floc'hlay},   year = {2024},   note = {R package version 1.0.0,     https://github.com/ThinkR-open/squash},   url = {https://thinkr-open.github.io/squash/}, }"},{"path":"https://thinkr-open.github.io/squash/index.html","id":"squash-several-quarto-to-single-html-","dir":"","previous_headings":"","what":"Several Quarto As Single HTML","title":"Several Quarto As Single HTML","text":"goal {squash} compile single html presentation file multiple independent quarto files. main purpose create custom slide decks several quarto chapter files. resulting revealjs presentation can themed via quarto extensions.","code":""},{"path":"https://thinkr-open.github.io/squash/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Several Quarto As Single HTML","text":"can install stable version GitHub : can install development version GitHub : package relies quarto > 1.3 (see download page).","code":"remotes::install_github(\"Thinkr-open/squash\", ref = \"production\") remotes::install_github(\"Thinkr-open/squash\", ref = \"main\")"},{"path":[]},{"path":"https://thinkr-open.github.io/squash/index.html","id":"tldr","dir":"","previous_headings":"Play with {squash}","what":"TL;DR","title":"Several Quarto As Single HTML","text":"Given vector qmds containing paths one several qmd revealjs presentation, can use function compile_qmd_course() compile full presentation. Check result","code":"library(squash)  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = tempdir(),   output_html = \"complete_course.html\" ) browseURL(html_output)"},{"path":"https://thinkr-open.github.io/squash/index.html","id":"tutorials","dir":"","previous_headings":"Play with {squash}","what":"Tutorials","title":"Several Quarto As Single HTML","text":"can find find full tutorial create first {squash}-made html . Eager spice ? Take look advanced usage doc : using quarto themes extensions: using personalized template: using parallel workers future: ","code":""},{"path":"https://thinkr-open.github.io/squash/index.html","id":"related-tools","dir":"","previous_headings":"Play with {squash}","what":"Related tools","title":"Several Quarto As Single HTML","text":"quite looking ? two closely related quarto tools : exporting book instead slide deck: quarto book including snippets instead full quarto chapters: Include shortcodes","code":""},{"path":"https://thinkr-open.github.io/squash/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Several Quarto As Single HTML","text":"Ready help? Take look contribution guidelines.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean folder after quarto rendering — clean_rendering_files","title":"Clean folder after quarto rendering — clean_rendering_files","text":"Remove files folders created rendering qmd html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean folder after quarto rendering — clean_rendering_files","text":"","code":"clean_rendering_files(dir, present_before, extra_dir = NULL)"},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean folder after quarto rendering — clean_rendering_files","text":"dir character. directory look rendering output recursively. present_before character. Path files directories present rendering. extra_dir character. Path additional directories remove.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean folder after quarto rendering — clean_rendering_files","text":"None. Side effect: remove files present rendering","code":""},{"path":"https://thinkr-open.github.io/squash/reference/clean_rendering_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean folder after quarto rendering — clean_rendering_files","text":"","code":"# create a temp dir with qmd temp_dir <- tempfile(pattern = \"clean\")  dir.create(   path = file.path(temp_dir, \"img\"),   recursive = TRUE )  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"C01-qmd1_for_test.qmd\", package = \"squash\"),   to = temp_dir ) #> [1] TRUE  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"img\", \"logo_1.png\", package = \"squash\"),   to = file.path(temp_dir, \"img\") ) #> [1] TRUE  # list files before rendering file_and_dirs_before <- list.files(   temp_dir,   recursive = TRUE,   full.names = TRUE,   include.dirs = TRUE )  # render qmd quarto::quarto_render(   input = file.path(temp_dir, \"C01-qmd1_for_test.qmd\"),   quiet = TRUE )  # remove created files and dirs clean_rendering_files(   dir = temp_dir,   present_before = file_and_dirs_before )  # clean temp dir unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single html from multiple qmd — compile_qmd_course","title":"Create a single html from multiple qmd — compile_qmd_course","text":"Independently compile several qmd create common html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single html from multiple qmd — compile_qmd_course","text":"","code":"compile_qmd_course(   vec_qmd_path,   output_dir,   output_html,   template = system.file(\"template_minimal.qmd\", package = \"squash\"),   output_format = \"revealjs\",   title = \"Title\",   metadata_template = NULL,   metadata_qmd = NULL,   template_text = NULL,   ext_dir = NULL,   quiet = FALSE,   debug = FALSE,   fix_img_path = TRUE )"},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single html from multiple qmd — compile_qmd_course","text":"vec_qmd_path character. Vector path qmd files output_dir character. Output path store html files companion folders output_html character. File name complete html output saved template character. Path template qmd use. Content included positions inside double-brackets output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. title character. Title presentation metadata_template list. List metadata used rendering template. path yml file provided, metadata read file. metadata_qmd list. List metadata used rendering individual qmd files. path yml file provided, metadata read file. template_text list. List named elements include template. ext_dir character. Path _extensions directory use compiling qmd quiet logical. Output info user console debug logical. Output rendering output user console. fix_img_path logical. image path present raw html inside files, use option correctly edit path.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a single html from multiple qmd — compile_qmd_course","text":"character. path resulting html file","code":""},{"path":"https://thinkr-open.github.io/squash/reference/compile_qmd_course.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a single html from multiple qmd — compile_qmd_course","text":"","code":"library(future)  # set parallel rendering plan(multisession, workers = 2)  # list example qmds courses_path <- system.file(   \"courses\",   \"M01\",   package = \"squash\" )  # copy course tree in tmpdir, add quarto porject file tmp_course_path <- tempfile(pattern = \"course\") dir.create(tmp_course_path) file.create(file.path(tmp_course_path, \"_quarto.yaml\")) #> [1] TRUE  file.copy(   from = courses_path,   to = tmp_course_path,   recursive = TRUE ) #> [1] TRUE  qmds <- list.files(   path = tmp_course_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"qmd$\" )  # generate html in temp folder temp_dir <- tempfile(pattern = \"compile\")  html_output <- compile_qmd_course(   vec_qmd_path = qmds,   output_dir = temp_dir,   output_html = \"complete_course.html\" ) #> ℹ {future} is using plan(multisession, workers = 2), to modify this use `future::plan()` #> ✔ All qmd rendered.  # reset default rendering plan(\"default\")  # clean up unlink(temp_dir, recursive = TRUE) unlink(tmp_course_path, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"Copy img root img directory edit path html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"","code":"copy_img_and_edit_path(html_path, img_root_dir)"},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"html_path character. Path html file. img_root_dir character. Path img root dir","code":""},{"path":"https://thinkr-open.github.io/squash/reference/copy_img_and_edit_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy img to root img directory and edit path in html — copy_img_and_edit_path","text":"None. Side effet : edit img path html.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a themed html from a qmd template — create_template_html","title":"Create a themed html from a qmd template — create_template_html","text":"Create template html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a themed html from a qmd template — create_template_html","text":"","code":"create_template_html(   path_to_qmd,   output_file,   output_dir,   output_format = \"revealjs\",   title = \"Title\",   metadata = NULL,   temp_dir = tempfile(pattern = \"template\"),   ext_dir = system.file(\"_extensions\", package = \"squash\") )"},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a themed html from a qmd template — create_template_html","text":"path_to_qmd character. Path qmd template rendered output_file character. Name output html template output_dir character. Output path store html files companion folders output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. title character. Title presentation metadata list. List metadata used rendering template temp_dir character. Path temp_dir template rendered ext_dir character. Path _extensions directory use compiling qmd","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a themed html from a qmd template — create_template_html","text":"character. Path html template","code":""},{"path":"https://thinkr-open.github.io/squash/reference/create_template_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a themed html from a qmd template — create_template_html","text":"","code":"# create temp dir temp_dir <- tempfile(pattern = \"template\")  # create html template path_to_html_template <- create_template_html(   path_to_qmd = system.file(\"template.qmd\", package = \"squash\"),   output_dir = temp_dir,   output_file = \"complete_course.html\" )  # clean up unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract html slide content — extract_html_slides","title":"Extract html slide content — extract_html_slides","text":"Extract slide content multiple html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract html slide content — extract_html_slides","text":"","code":"extract_html_slides(vec_html_path, use_metadata = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract html slide content — extract_html_slides","text":"vec_html_path character. vector path individual html files use_metadata logical. Use keywords metadata building slide's url","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract html slide content — extract_html_slides","text":"HTML. HTML slide content html files combined together.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/extract_html_slides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract html slide content — extract_html_slides","text":"","code":"# list html files courses_path <- system.file(   \"courses\",   package = \"squash\" )  htmls <- list.files(   path = courses_path,   full.names = TRUE,   recursive = TRUE,   pattern = \"html$\" )  html_slide_content <- extract_html_slides(vec_html_path = htmls)"},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a qmd course to html — render_single_qmd","title":"Render a qmd course to html — render_single_qmd","text":"Render single qmd file html image folder.","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a qmd course to html — render_single_qmd","text":"","code":"render_single_qmd(   qmd,   img_root_dir = \"img\",   output_format = \"revealjs\",   metadata = NULL,   quiet = TRUE )"},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a qmd course to html — render_single_qmd","text":"qmd character. Path qmd file render img_root_dir character. Path main image folder extract media output_format character. Output format qmd, default \"revealjs\". Can adapted specific themes. metadata list. List metadata used rendering single qmd file quiet logical. Output info user console","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a qmd course to html — render_single_qmd","text":"logical. TRUE rendering succeeded, FALSE otherwise. Side effect : render qmd html","code":""},{"path":"https://thinkr-open.github.io/squash/reference/render_single_qmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a qmd course to html — render_single_qmd","text":"","code":"# create a temp dir with qmd temp_dir <- tempfile(pattern = \"render\")  dir.create(   path = file.path(temp_dir, \"img\"),   recursive = TRUE )  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"C01-qmd1_for_test.qmd\", package = \"squash\"),   to = temp_dir ) #> [1] TRUE  file.copy(   from = system.file(\"courses\", \"M01\", \"M01S01\", \"img\", \"logo_1.png\", package = \"squash\"),   to = file.path(temp_dir, \"img\") ) #> [1] TRUE  # render qmd is_rendered <- render_single_qmd(   qmd = file.path(temp_dir, \"C01-qmd1_for_test.qmd\"),   img_root_dir = file.path(temp_dir, \"image_folder\") )  # clean temp dir unlink(temp_dir, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/squash/reference/squash-package.html","id":null,"dir":"Reference","previous_headings":"","what":"squash: Several Quarto As Single HTML — squash-package","title":"squash: Several Quarto As Single HTML — squash-package","text":"Compile n .qmd (format revealjs) one single html file.","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/squash/reference/squash-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"squash: Several Quarto As Single HTML — squash-package","text":"Maintainer: Antoine Languillaume antoine@thinkr.fr Authors: Colin Fay colin@thinkr.fr Swann Floc'hlay swann@thinkr.fr","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-100","dir":"Changelog","previous_headings":"","what":"squash 1.0.0","title":"squash 1.0.0","text":"Official stable release","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-047","dir":"Changelog","previous_headings":"","what":"squash 0.4.7","title":"squash 0.4.7","text":"Add architecture scheme Improve Readme","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-046","dir":"Changelog","previous_headings":"","what":"squash 0.4.6","title":"squash 0.4.6","text":"Add vignette advanced usage Improve code coverage Refactoring","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-045","dir":"Changelog","previous_headings":"","what":"squash 0.4.5","title":"squash 0.4.5","text":"Add debug parameter split simple verbose large one includong rendering details Add vignette simple usage","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-044","dir":"Changelog","previous_headings":"","what":"squash 0.4.4","title":"squash 0.4.4","text":"Refactoring reduce single function size","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-043","dir":"Changelog","previous_headings":"","what":"squash 0.4.3","title":"squash 0.4.3","text":"use {fs} compute extensions relative path","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-042","dir":"Changelog","previous_headings":"","what":"squash 0.4.2","title":"squash 0.4.2","text":"Use external extension directory. Enable metadata input yaml Update doc cimplify user example ReadMe.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-041","dir":"Changelog","previous_headings":"","what":"squash 0.4.1","title":"squash 0.4.1","text":"Set rendering parameters function parameters instead yaml file.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-040","dir":"Changelog","previous_headings":"","what":"squash 0.4.0","title":"squash 0.4.0","text":"New feature : set fix_img_path TRUE enable img embedding html code.","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-038","dir":"Changelog","previous_headings":"","what":"squash 0.3.8","title":"squash 0.3.8","text":"Update quakr increase text size slides","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-037","dir":"Changelog","previous_headings":"","what":"squash 0.3.7","title":"squash 0.3.7","text":"New feature: add footer html","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-036","dir":"Changelog","previous_headings":"","what":"squash 0.3.6","title":"squash 0.3.6","text":"Add admin file install {squash} dev containers","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-035","dir":"Changelog","previous_headings":"","what":"squash 0.3.5","title":"squash 0.3.5","text":"Improve test slides description text ease visual check Remove fusen structure","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-034","dir":"Changelog","previous_headings":"","what":"squash 0.3.4","title":"squash 0.3.4","text":"Use keywords metadata slide url id present check duplicates","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-033","dir":"Changelog","previous_headings":"","what":"squash 0.3.3","title":"squash 0.3.3","text":"Create output directory recursively exist","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-032","dir":"Changelog","previous_headings":"","what":"squash 0.3.2","title":"squash 0.3.2","text":"try fetch img dir media extracted qmd","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-031","dir":"Changelog","previous_headings":"","what":"squash 0.3.1","title":"squash 0.3.1","text":"Look quarto project using directory path","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-030","dir":"Changelog","previous_headings":"","what":"squash 0.3.0","title":"squash 0.3.0","text":"file rendering executed inside package file architecture Rendering progress tracked {progressr} Quarto compil profile quakr theme added quarto project pre-existing","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-021","dir":"Changelog","previous_headings":"","what":"squash 0.2.1","title":"squash 0.2.1","text":"Example courses used {formation} converted qmd included tests","code":""},{"path":"https://thinkr-open.github.io/squash/news/index.html","id":"squash-020","dir":"Changelog","previous_headings":"","what":"squash 0.2.0","title":"squash 0.2.0","text":"Rename package","code":""}]
